name: CI

on:
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Test
    env:
      CI: true
      TERM: xterm-256color

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14, 12, 10]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}
      - run: yarn install --frozen-lockfile --ignore-optional --non-interactive --silent

      - run: yarn test
        if: matrix.node != 10

      - run: yarn test --spec "**/*.test.cjs"
        if: matrix.node == 10

      - uses: codecov/codecov-action@v1
        with:
          file: ./coverage/coverage-final.json
      # - name: Save ESLint results as JSON for sonar
      #   run: yarn lint --format json -o reports/eslint-results.json
      #   if: matrix.os == 'ubuntu-latest' && matrix.node == 12
      # - name: SonarCloud Scan
      #   run: |
      #     curl --create-dirs -sSLo .sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
      #     unzip -o .sonar/sonar-scanner.zip -d .sonar/
      #     .sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux/bin/sonar-scanner \
      #       -Dsonar.login=${{ secrets.SONAR_LOGIN }}
      #   if: matrix.os == 'ubuntu-latest' && matrix.node == '12.x'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_SCANNER_VERSION: '4.2.0.1873'
      #     # https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner
      #     SONAR_SCANNER_OPTS: -Xmx1024m
