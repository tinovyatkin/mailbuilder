name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Test
    env:
      CI: true
      TERM: xterm-256color

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14, 12, 10]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # need that for Sonar

      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}
      - run: yarn install --frozen-lockfile --ignore-optional --non-interactive --silent

      - name: Install Sonar reporter for Mocha
        if: matrix.node != 10
        run: yarn add --dev @danmasta/mocha-sonar

      - run: yarn test -R @danmasta/mocha-sonar
        if: matrix.node != 10

      - run: yarn test --spec "**/*.test.cjs"
        if: matrix.node == 10

      - uses: codecov/codecov-action@v3
        if: matrix.node == 14
        with:
          file: ./coverage/coverage-final.json

      - name: Install latest Sonar Scanner
        if: matrix.node == 12
        run: |
          sudo apt-get install -y -qq --no-install-recommends lynx curl bsdtar
          LATEST_SONAR=$(lynx --dump https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/ | grep linux.zip$ | tail -1 | cut -c 7-)
          curl --create-dirs -sSLo .sonar/sonar-scanner.zip $LATEST_SONAR
          bsdtar --strip-components=1 -xvf .sonar/sonar-scanner.zip -C .sonar

      - name: Save ESLint results as JSON for sonar
        if: matrix.node == 12
        run: yarn lint --format json -o coverage/eslint-results.json

      - name: Run Sonar Scanner
        if: matrix.node == 12
        run: .sonar/bin/sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner
          SONAR_SCANNER_OPTS: -Xmx1024m
